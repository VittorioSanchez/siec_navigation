<?xml version="1.0"?>

<launch>

	#-----------------simu_control--------
  <node pkg="SIEC_control_simu" type="command.py" name="command"/>

	#-----------------rosbridge---------------
	<arg name="port" default="9090" />
  <arg name="address" default="0.0.0.0" />
  <arg name="ssl" default="false" />
  <arg name="certfile" default=""/>
  <arg name="keyfile" default="" />

  <arg name="retry_startup_delay" default="5" />

  <arg name="fragment_timeout" default="600" />
  <arg name="delay_between_messages" default="0" />
  <arg name="max_message_size" default="None" />
  <arg name="unregister_timeout" default="10" />
  <arg name="websocket_external_port" default="None" />

  <arg name="use_compression" default="false" />

  <arg name="authenticate" default="false" />

  <arg name="websocket_ping_interval" default="0" />
  <arg name="websocket_ping_timeout" default="30" />
  <arg name="websocket_null_origin" default="true" />

  <arg name="topics_glob" default="[*]" />
  <arg name="services_glob" default="[*]" />
  <arg name="params_glob" default="[*]" />
  <arg name="bson_only_mode" default="false" />
  <!-- Output: screen, log -->
  <arg name="output" default="screen" />

  <!-- Valid options for binary_encoder are "default", "b64" and "bson". -->
  <arg unless="$(arg bson_only_mode)" name="binary_encoder" default="default"/>

  <group if="$(arg ssl)">
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" output="$(arg output)">
      <param name="certfile" value="$(arg certfile)" />
      <param name="keyfile" value="$(arg keyfile)" />
      <param name="authenticate" value="$(arg authenticate)" />
      <param name="port" value="$(arg port)"/>
      <param name="address" value="$(arg address)"/>
      <param name="retry_startup_delay" value="$(arg retry_startup_delay)"/>
      <param name="fragment_timeout" value="$(arg fragment_timeout)"/>
      <param name="delay_between_messages" value="$(arg delay_between_messages)"/>
      <param name="max_message_size" value="$(arg max_message_size)"/>
      <param name="unregister_timeout" value="$(arg unregister_timeout)"/>
      <param name="use_compression" value="$(arg use_compression)"/>

      <param name="websocket_ping_interval" value="$(arg websocket_ping_interval)" />
      <param name="websocket_ping_timeout" value="$(arg websocket_ping_timeout)" />
      <param name="websocket_external_port" value="$(arg websocket_external_port)" />
      <param name="websocket_null_origin" value="$(arg websocket_null_origin)" />

      <param name="topics_glob" value="$(arg topics_glob)"/>
      <param name="services_glob" value="$(arg services_glob)"/>
      <param name="params_glob" value="$(arg params_glob)"/>
    </node>
  </group>
  <group unless="$(arg ssl)">
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" output="$(arg output)">
      <param name="authenticate" value="$(arg authenticate)" />
      <param name="port" value="$(arg port)"/>
      <param name="address" value="$(arg address)"/>
      <param name="retry_startup_delay" value="$(arg retry_startup_delay)"/>
      <param name="fragment_timeout" value="$(arg fragment_timeout)"/>
      <param name="delay_between_messages" value="$(arg delay_between_messages)"/>
      <param name="max_message_size" value="$(arg max_message_size)"/>
      <param name="unregister_timeout" value="$(arg unregister_timeout)"/>
      <param name="use_compression" value="$(arg use_compression)"/>

      <param name="websocket_ping_interval" value="$(arg websocket_ping_interval)" />
      <param name="websocket_ping_timeout" value="$(arg websocket_ping_timeout)" />
      <param name="websocket_external_port" value="$(arg websocket_external_port)" />

      <param name="topics_glob" value="$(arg topics_glob)"/>
      <param name="services_glob" value="$(arg services_glob)"/>
      <param name="params_glob" value="$(arg params_glob)"/>

      <param name="bson_only_mode" value="$(arg bson_only_mode)"/>
    </node>
  </group>

  <node name="rosapi" pkg="rosapi" type="rosapi_node" output="$(arg output)">
    <param name="topics_glob" value="$(arg topics_glob)"/>
    <param name="services_glob" value="$(arg services_glob)"/>
    <param name="params_glob" value="$(arg params_glob)"/>
  </node>
  	

	#------------pointcloud to laserscan-----------------
	
	
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/simulator/lidar"/>
      <remap from="scan" to="/simulator/laserscan" />
      <rosparam>
        target_frame: velodyne  
        transform_tolerance: 0.01
        min_height: -1.0
        max_height: 1.0
        
        angle_min: -3.14
        angle_max: 3.14
        angle_increment: 0.0087
        scan_time: 1.0
        range_min: 0.45
        range_max: 300.0
        use_inf: true

        #concurrency_level affects number of pc queued for processing and the n>
        # 0: Detect number of cores
        # 1: Single threaded
        # 2: inf : Parallelism level
        concurrency_level: 1
      </rosparam>
    </node>
    #------------------navigation-----------
    
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find SIEC_navigation_simu)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find SIEC_navigation_simu)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find SIEC_navigation_simu)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find SIEC_navigation_simu)/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find SIEC_navigation_simu)/base_local_planner_params.yaml" command="load" />


		<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
		<param name="controller_frequency" value="5.0" />
		<param name="controller_patience" value="15.0" />

                <param name="clearing_rotation_allowed" value="false" /> <!-- Our carlike robot is not able to rotate in place -->
                
    </node>
    
    #------------------tf---------------------
    <node pkg="robot_siec_setup_tf" type="tf_broadcaster" name="tf_broadcaster"/>
    
    #------------------map--------------------
    
    <node pkg="tf"
        type="static_transform_publisher"
        name="link1_broadcaster"
        args="0 0 0 0 0 0 map odom 100" />
    
    <arg name="map_file" default="$(find SIEC_navigation_simu)/test_campus-1.yaml"/>

  	<!-- Run the map server -->
  	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  	<node pkg="amcl" type="amcl" name="amcl" output="screen">
		<rosparam file="$(find teb_local_planner_tutorials)/cfg/amcl_params.yaml" command="load" />

	        <param name="initial_pose_x"            value="2"/>
		<param name="initial_pose_y"            value="2"/>
		<param name="initial_pose_a"            value="0"/>
	</node>
	
	#----------------rviz----------------
	

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find SIEC_navigation_simu)/rviz/SIEC.rviz" >
  	<remap from="/move_base_simple/goal" to="/hmi_wp"/>
  </node>

  
</launch>
